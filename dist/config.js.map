{"version":3,"file":"config.js","names":["vbrickAccessToken: string | null","vbrickTokenRefreshTimeout: NodeJS.Timeout | null"],"sources":["../src/vbrickUtilities.ts","../src/config.ts"],"sourcesContent":["import { fileURLToPath } from \"node:url\";\r\nimport { config } from \"./config.ts\";\r\nimport path from \"node:path\";\r\n\r\nlet vbrickAccessToken: string | null = null;\r\nlet vbrickTokenRefreshTimeout: NodeJS.Timeout | null = null;\r\n\r\nexport async function makeVbrickRevApiRequest<T>(url: string): Promise<T | null> {\r\n  let token = getVbrickAccessToken();\r\n\r\n  if (!token) {\r\n    console.error(\"No Vbrick access token available\");\r\n    return null;\r\n  }\r\n\r\n  const headers = {\r\n    \"User-Agent\": config.userAgent,\r\n    Accept: \"application/json\",\r\n    Authorization: `VBrick ${token}`\r\n  };\r\n\r\n  try {\r\n    console.warn(`Headers: ${JSON.stringify(headers)}`);\r\n    console.warn(`Making Vbrick Rev API request to: ${url}`);\r\n    const response = await fetch(url, { headers });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const contentType = response.headers.get(\"content-type\") || \"\";\r\n    if (contentType.includes(\"application/json\")) {\r\n      return (await response.json()) as T;\r\n    } \r\n    else if (contentType.includes(\"application/octet-stream\") || contentType.includes(\"stream\") || response.body) {\r\n      // @ts-ignore: allow returning ReadableStream for caller to handle\r\n      return response.body as any;\r\n    } \r\n    else {\r\n      // @ts-ignore: allow returning string for caller to handle\r\n      return (await response.text()) as any;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error making Vbrick Rev request:\", error);\r\n    return null;\r\n  }\r\n}\r\nfunction getVbrickAccessToken() {\r\n  return vbrickAccessToken;\r\n}\r\n\r\nexport function setVbrickAccessToken(token: string) {\r\n  vbrickAccessToken = token;\r\n}\r\n\r\nexport async function authenticateVbrickAndScheduleRefresh(): Promise<string | null> {\r\n  console.warn(\"Authenticating with Vbrick...\", config.apiKey);\r\n  if (config.apiKey == null || config.apiKey === \"\") {\r\n    return null;\r\n  }\r\n\r\n  const url = `${config.vbrickRevTenantUrl}/api/v2/authenticate`;\r\n  const body = JSON.stringify({\r\n    apiKey: config.apiKey,\r\n    secret: config.secret\r\n  });\r\n\r\n  const headers = {\r\n    \"User-Agent\": config.userAgent,\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\"\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, { method: \"POST\", headers, body });\r\n    if (!response.ok) {\r\n      throw new Error(`Auth error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const token = data.token || null;\r\n    const expiresIn = data.expires_in || 3600; // seconds, fallback to 1 hour\r\n\r\n    if (token) {\r\n      vbrickAccessToken = token;\r\n      if (vbrickTokenRefreshTimeout) clearTimeout(vbrickTokenRefreshTimeout);\r\n      const refreshMs = Math.max((expiresIn - 60) * 1000, 10000); // at least 10s\r\n      vbrickTokenRefreshTimeout = setTimeout(() => {\r\n        authenticateVbrickAndScheduleRefresh().then((newToken) => {\r\n          if (newToken) {\r\n            console.warn(\"Vbrick token refreshed.\");\r\n          } else {\r\n            console.error(\"Failed to refresh Vbrick token.\");\r\n          }\r\n        });\r\n      }, refreshMs);\r\n    }\r\n    return token;\r\n  } catch (error) {\r\n    console.error(\"Error authenticating with Vbrick:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getFolderPath(folderName: string) : string {\r\n  const __filename = fileURLToPath(import.meta.url);\r\n  const __dirname = path.dirname(__filename);\r\n  return path.join(__dirname, folderName);\r\n}\r\n\r\nexport function formatResponse(data: any, type: string): { content: { type: \"text\"; text: string }[] } {\r\n  return {\r\n    content: [\r\n      {\r\n        type: \"text\",\r\n        text: type === \"json\" ? JSON.stringify(data, null, 2) : String(data)\r\n      }\r\n    ]\r\n  };\r\n}","import dotenv from 'dotenv';\r\nimport path from 'node:path';\r\nimport { getFolderPath } from './vbrickUtilities.ts'\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nlet envFile = '.env';\r\n\r\nif (env) {\r\n    envFile = `.env.${env}`;\r\n}\r\n\r\nlet envpath = path.join(getFolderPath('..'), envFile);\r\n\r\nconsole.warn(`Loading environment variables from ${envpath}`);\r\ndotenv.config({ path: envpath, quiet: true });\r\n\r\nexport const config = {\r\n    vbrickRevTenantUrl: process.env.VBRICK_REV_TENANT_URL?.replace(/\\/$/, '') || \"https://tenant.rev.vbrick.com\",\r\n    userAgent: process.env.USER_AGENT || \"rev-mcp-server-app/1.0\",\r\n    apiKey: process.env.API_KEY || \"\",\r\n    secret: process.env.SECRET || \"\",\r\n    oauth: {\r\n        enabled: process.env.OAUTH_ENABLED ? process.env.OAUTH_ENABLED === \"true\" : true,\r\n        clientId: process.env.OAUTH_CLIENT_ID || \"vbrick-mcp-server\",\r\n        scopes: process.env.OAUTH_SCOPES || \"openid profile email\",\r\n        port: process.env.OAUTH_PORT ? Number(process.env.OAUTH_PORT) : 8008,\r\n        backupPort: process.env.OAUTH_BACKUP_PORT ? Number(process.env.OAUTH_BACKUP_PORT) : 8009\r\n    }\r\n};\r\n"],"mappings":"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"}